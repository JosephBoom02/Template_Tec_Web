{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Documents/Ingegneria Informatica/3_Anno/1_Semestre/Tecnologie_Web/Esami/Appello_19Aprile2024/Esercozio3/src/ReactComponent/App.js\";\nimport React from 'react';\nimport '../App.css';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startInterval = () => {\n      // Check if an interval is already running\n      if (this.state.intervalId) return;\n\n      // Set up the interval\n      const intervalId = setInterval(() => {\n        this.avanza();\n      }, 1000); // 4000 milliseconds = 4 seconds\n\n      // Update the state with the interval ID\n      this.setState({\n        intervalId\n      });\n    };\n    this.sectionNames = [\"Ricerca\", \"Display\", \"Aggiunta nome\"];\n    let entriesTemp = [];\n    entriesTemp[0] = {\n      nome: \"Paolo\",\n      numero: \"3397845631\"\n    };\n    entriesTemp[1] = {\n      nome: \"Paola\",\n      numero: \"3387845632\"\n    };\n    entriesTemp[2] = {\n      nome: \"Francesco\",\n      numero: \"3334845121\"\n    };\n    entriesTemp[3] = {\n      nome: \"Giuseppe\",\n      numero: \"3735410506\"\n    };\n    entriesTemp[4] = {\n      nome: \"Giulia\",\n      numero: \"3496846632\"\n    };\n    this.state = {\n      entries: entriesTemp\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  printStatus() {\n    console.log(\"Status:\");\n    console.log(\"Corridori: \" + this.state.corridori);\n    console.log(\"Colors: \" + this.state.colors);\n    console.log(\"Posizioni: \" + this.state.posizioni);\n    console.log(\"Griglia: \" + this.state.griglia);\n    console.log(\"isColored: \" + this.state.isColored);\n    console.log(\"Classifica: \" + this.state.classifica);\n    console.log(\"Started: \" + this.state.started);\n  }\n  cerca() {\n    let entries = [];\n  }\n  handleClick() {\n    let corridoriTemp = parseInt(document.getElementById(\"corridori\").value, 10);\n    if (corridoriTemp < 4 || corridoriTemp > 6) {\n      alert(\"Inserisci un numero di corridori tra 4 e 6!\");\n      return;\n    }\n    let grigliaTemp = [];\n    let isColoredTemp = [];\n    let posizioniTemp = [];\n    for (let i = 0; i < corridoriTemp; i++) {\n      //griglia\n      grigliaTemp[i] = [];\n      grigliaTemp[i][0] = \"Partenza\";\n      grigliaTemp[i][10] = \"Traguardo\";\n      for (let j = 1; j < 10; j++) {\n        grigliaTemp[i][j] = j;\n      }\n\n      //isColored\n      isColoredTemp[i] = [];\n      isColoredTemp[i][0] = true;\n      for (let j = 1; j < 11; j++) {\n        isColoredTemp[i][j] = false;\n      }\n      posizioniTemp[i] = 0;\n    }\n    this.setState({\n      griglia: grigliaTemp,\n      corridori: corridoriTemp,\n      isColored: isColoredTemp,\n      posizioni: posizioniTemp,\n      started: true\n    }, this.printStatus);\n    this.startInterval();\n  }\n  componentWillUnmount() {\n    // Clear the interval when the component unmounts\n    const {\n      intervalId\n    } = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n  avanza() {\n    if (this.state.started) {\n      let isColoredTemp = this.state.isColored;\n      let startedTemp = true;\n      let posizioniTemp = this.state.posizioni;\n      let classificaTemp = this.state.classifica;\n      for (let i = 0; i < this.state.corridori; i++) {\n        let lastIndex = -1;\n        for (let j = 1; j < 11; j++) {\n          if (isColoredTemp[i][j] === false) {\n            lastIndex = j - 1;\n            break;\n          }\n        }\n        let n = Math.floor(Math.random() * 3) + 1;\n        console.log(\"Corridore \" + (i + 1) + \" avanza di \" + n + \" posizioni\");\n        for (let j = lastIndex; j <= lastIndex + n; j++) {\n          isColoredTemp[i][j] = true;\n        }\n      }\n\n      //aggiorno posizioni\n      for (let i = 0; i < this.state.corridori; i++) {\n        let lastIndex = -1;\n        for (let j = 1; j < 11; j++) {\n          if (isColoredTemp[i][j] === false) {\n            lastIndex = j - 1;\n            console.log(\"Last index of isColored for corridor \" + i + \": \" + lastIndex);\n            break;\n          } else if (j === 10) {\n            lastIndex = 10;\n          }\n        }\n        posizioniTemp[i] = lastIndex;\n      }\n\n      //controllo se qualcuno Ã¨ arrivato al traguardo\n      for (let i = 0; i < posizioniTemp.length; i++) {\n        if (posizioniTemp[i] === 10) {\n          startedTemp = false;\n        }\n      }\n      if (startedTemp === false) {\n        //classifica associa a ogni corridore identificato\n        //dall'indice dell'array la sua posizione nella\n        //classifica\n        const athletes = posizioniTemp.map((distance, index) => ({\n          athleteNumber: index,\n          distance: distance\n        }));\n        athletes.sort((a, b) => b.distance - a.distance);\n        classificaTemp = new Array(posizioniTemp.length).fill(0);\n        let currentRank = 1; // Start ranking from 1\n        for (let i = 0; i < athletes.length; i++) {\n          // If it's the first athlete or the distance is different from the previous athlete\n          if (i === 0 || athletes[i].distance !== athletes[i - 1].distance) {\n            classificaTemp[athletes[i].athleteNumber] = currentRank; // Assign current rank\n            currentRank++; // Increment the rank for the next athlete\n          } else {\n            classificaTemp[athletes[i].athleteNumber] = classificaTemp[athletes[i - 1].athleteNumber]; // Assign the same rank as the previous athlete\n          }\n        }\n      }\n      this.setState({\n        isColored: isColoredTemp,\n        posizioni: posizioniTemp,\n        started: startedTemp,\n        classifica: classificaTemp\n      }, this.printStatus, startedTemp === false ? setTimeout(() => {\n        alert(\"Gioco finito\");\n      }, 100) : null);\n    }\n  }\n  reset() {\n    this.setState({\n      corridori: 0,\n      griglia: [],\n      isColored: [],\n      posizioni: [],\n      classifica: [],\n      intervalId: null,\n      started: false\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Section1, {\n        sectionName: this.sectionNames[0],\n        handleClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Section2, {\n        sectionName: this.sectionNames[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Section3, {\n        sectionName: this.sectionNames[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Section1","Section2","Section3","jsxDEV","_jsxDEV","App","Component","constructor","props","startInterval","state","intervalId","setInterval","avanza","setState","sectionNames","entriesTemp","nome","numero","entries","handleClick","bind","reset","printStatus","console","log","corridori","colors","posizioni","griglia","isColored","classifica","started","cerca","corridoriTemp","parseInt","document","getElementById","value","alert","grigliaTemp","isColoredTemp","posizioniTemp","i","j","componentWillUnmount","clearInterval","startedTemp","classificaTemp","lastIndex","n","Math","floor","random","length","athletes","map","distance","index","athleteNumber","sort","a","b","Array","fill","currentRank","setTimeout","render","className","children","sectionName","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/joseph/Documents/Ingegneria Informatica/3_Anno/1_Semestre/Tecnologie_Web/Esami/Appello_19Aprile2024/Esercozio3/src/ReactComponent/App.js"],"sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\tthis.sectionNames = [\"Ricerca\", \"Display\", \"Aggiunta nome\"];\n\n\tlet entriesTemp = [];\n\tentriesTemp[0] = { nome: \"Paolo\", numero: \"3397845631\"};\n\tentriesTemp[1] = { nome: \"Paola\", numero: \"3387845632\"};\n\tentriesTemp[2] = { nome: \"Francesco\", numero: \"3334845121\"};\n\tentriesTemp[3] = { nome: \"Giuseppe\", numero: \"3735410506\"};\n\tentriesTemp[4] = { nome: \"Giulia\", numero: \"3496846632\"};\n\n    this.state = {\n\t\tentries: entriesTemp,\n    };\n\n\n\n    this.handleClick = this.handleClick.bind(this);\n\tthis.reset = this.reset.bind(this);\n  }\n  \n  printStatus(){\n\tconsole.log(\"Status:\");\n\tconsole.log(\"Corridori: \" + this.state.corridori);\n\tconsole.log(\"Colors: \" + this.state.colors);\n\tconsole.log(\"Posizioni: \" + this.state.posizioni);\n\tconsole.log(\"Griglia: \" + this.state.griglia);\n\tconsole.log(\"isColored: \" + this.state.isColored);\n\tconsole.log(\"Classifica: \" + this.state.classifica);\n\tconsole.log(\"Started: \" + this.state.started);\n\n  }\n\n  cerca(){\n\tlet entries = [];\n  }\n\n  handleClick(){\n\tlet corridoriTemp = parseInt(document.getElementById(\"corridori\").value, 10);\n\n\tif(corridoriTemp < 4 || corridoriTemp > 6){\n\t\talert(\"Inserisci un numero di corridori tra 4 e 6!\")\n\t\treturn\n\t}\n\n\tlet grigliaTemp = [];\n\tlet isColoredTemp = [];\n\tlet posizioniTemp = [];\n\n\tfor(let i=0;i<corridoriTemp;i++){\n\t\t//griglia\n\t\tgrigliaTemp[i] = [];\n\t\tgrigliaTemp[i][0] = \"Partenza\";\n\t\tgrigliaTemp[i][10] = \"Traguardo\";\n\t\tfor(let j=1;j<10;j++){\n\t\t\tgrigliaTemp[i][j] = j;\n\t\t}\n\n\t\t//isColored\n\t\tisColoredTemp[i] = [];\n\t\tisColoredTemp[i][0] = true;\n\t\tfor(let j=1;j<11;j++){\n\t\t\tisColoredTemp[i][j] = false;\n\t\t}\n\t\t\n\n\t\tposizioniTemp[i] = 0;\n\t}\n\n\tthis.setState(\n\t\t({\n\t\t\tgriglia: grigliaTemp,\n\t\t\tcorridori: corridoriTemp,\n\t\t\tisColored: isColoredTemp,\n\t\t\tposizioni: posizioniTemp,\n\t\t\tstarted: true,\n\t\t}),\n\t\tthis.printStatus\n\t);\t\n\tthis.startInterval();\n  }\n\n  startInterval = () => {\n    // Check if an interval is already running\n    if (this.state.intervalId) return;\n\n    // Set up the interval\n    const intervalId = setInterval(() => {\n      this.avanza();\n    }, 1000); // 4000 milliseconds = 4 seconds\n\n    // Update the state with the interval ID\n    this.setState({ intervalId });\n  };\n\n  componentWillUnmount() {\n    // Clear the interval when the component unmounts\n    const { intervalId } = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  avanza(){\n\tif(this.state.started){\n\t\tlet isColoredTemp = this.state.isColored;\n\t\tlet startedTemp = true;\n\t\tlet posizioniTemp = this.state.posizioni;\n\t\tlet classificaTemp = this.state.classifica;\n\n\t\tfor(let i=0;i<this.state.corridori;i++){\n\t\t\tlet lastIndex = -1;\n\t\t\tfor(let j=1;j<11;j++){\n\t\t\t\tif(isColoredTemp[i][j] === false){\n\t\t\t\t\tlastIndex = j-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tlet n = Math.floor(Math.random() * 3) + 1;\n\t\t\tconsole.log(\"Corridore \" + (i+1) + \" avanza di \" + n  + \" posizioni\");\n\n\t\t\tfor(let j=lastIndex;j<=lastIndex+n;j++){\n\t\t\t\tisColoredTemp[i][j] = true;\n\t\t\t}\n\t\t}\n\n\t\t//aggiorno posizioni\n\t\tfor(let i=0;i<this.state.corridori;i++){\n\t\t\tlet lastIndex = -1;\n\t\t\tfor(let j=1;j<11;j++){\n\t\t\t\tif(isColoredTemp[i][j] === false){\n\t\t\t\t\tlastIndex = j-1;\n\t\t\t\t\tconsole.log(\"Last index of isColored for corridor \" + i + \": \" + lastIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(j === 10){\n\t\t\t\t\tlastIndex = 10;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tposizioniTemp[i] = lastIndex;\n\t\t}\n\t\t\n\n\t\t//controllo se qualcuno Ã¨ arrivato al traguardo\n\t\tfor(let i=0; i<posizioniTemp.length;i++){\n\t\t\tif(posizioniTemp[i] === 10){\n\t\t\t\tstartedTemp = false;\n\t\t\t}\n\t\t}\n\n\t\tif(startedTemp === false){\n\t\t\t//classifica associa a ogni corridore identificato\n\t\t\t//dall'indice dell'array la sua posizione nella\n\t\t\t//classifica\n\t\t\tconst athletes = posizioniTemp.map((distance, index) => ({\n\t\t\t\tathleteNumber: index,\n\t\t\t\tdistance: distance,\n\t\t\t}));\n\n\t\t\tathletes.sort((a, b) => b.distance - a.distance);\n\t\t\t\n\n\t\t\tclassificaTemp = new Array(posizioniTemp.length).fill(0);\n\n\t\t\tlet currentRank = 1; // Start ranking from 1\n\t\t\tfor (let i = 0; i < athletes.length; i++) {\n\t\t\t\t// If it's the first athlete or the distance is different from the previous athlete\n\t\t\t\tif (i === 0 || athletes[i].distance !== athletes[i - 1].distance) {\n\t\t\t\t\tclassificaTemp[athletes[i].athleteNumber] = currentRank; // Assign current rank\n\t\t\t\t\tcurrentRank++; // Increment the rank for the next athlete\n\t\t\t\t} else {\n\t\t\t\t\tclassificaTemp[athletes[i].athleteNumber] = classificaTemp[athletes[i - 1].athleteNumber]; // Assign the same rank as the previous athlete\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\n\t\t}\n\n\n\t\tthis.setState(\n\t\t\t({\n\t\t\t\tisColored: isColoredTemp,\n\t\t\t\tposizioni: posizioniTemp,\n\t\t\t\tstarted: startedTemp,\n\t\t\t\tclassifica: classificaTemp,\n\t\t\t}),\n\t\t\tthis.printStatus,\n\t\t\tstartedTemp === false ? setTimeout(() => { alert(\"Gioco finito\"); }, 100 ) : null,\n\t\t)\n\t}\n  }\n\n\n  reset(){\n\tthis.setState(\n\t\t({\n\t\t\tcorridori: 0,\n\t\t\tgriglia : [],\n\t\t\tisColored: [],\n\t\t\tposizioni: [],\n\t\t\tclassifica: [],\n\t\t\tintervalId: null,\n\t\t\tstarted: false,\n\t\t}),\n\t)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n\t\t<Section1 \n\t\t\tsectionName = {this.sectionNames[0]}\n\t\t\thandleClick={this.handleClick} \n\t\t/>\n\t\t<Section2 \n\t\t\tsectionName = {this.sectionNames[1]}\n\t\t/>\n\t\t<Section3 \n\t\t\tsectionName = {this.sectionNames[2]}\n\t\t/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}