{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Documents/Ingegneria Informatica/3_Anno/1_Semestre/Tecnologie_Web/Esami/Appello_24Giugno2024/Esercizio3/src/ReactComponent/App.js\";\nimport React from 'react';\nimport '../App.css';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startInterval = () => {\n      // Check if an interval is already running\n      if (this.state.intervalId) return;\n\n      // Set up the interval\n      const intervalId = setInterval(() => {\n        this.avanza();\n      }, 1000); // 4000 milliseconds = 4 seconds\n\n      // Update the state with the interval ID\n      this.setState({\n        intervalId\n      });\n    };\n    this.sectionNames = [\"Configurazione\", \"Pista\", \"Classifica\"];\n    this.state = {\n      corridori: 0,\n      colors: [\"red\", \"green\", \"blue\", \"violet\", \"yellow\", \"orange\"],\n      griglia: [],\n      isColored: [],\n      posizioni: [],\n      classifica: [],\n      intervalId: null,\n      started: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  printStatus() {\n    console.log(\"Status:\");\n    console.log(\"Corridori: \" + this.state.corridori);\n    console.log(\"Colors: \" + this.state.colors);\n    console.log(\"Posizioni: \" + this.state.posizioni);\n    console.log(\"Griglia: \" + this.state.griglia);\n    console.log(\"isColored: \" + this.state.isColored);\n    console.log(\"Started: \" + this.state.started);\n  }\n  handleClick() {\n    let corridoriTemp = parseInt(document.getElementById(\"corridori\").value, 10);\n    if (corridoriTemp < 4 || corridoriTemp > 6) {\n      alert(\"Inserisci un numero di corridori tra 4 e 6!\");\n      return;\n    }\n    let grigliaTemp = [];\n    let isColoredTemp = [];\n    let posizioniTemp = [];\n    for (let i = 0; i < corridoriTemp; i++) {\n      //griglia\n      grigliaTemp[i] = [];\n      grigliaTemp[i][0] = \"Partenza\";\n      grigliaTemp[i][10] = \"Traguardo\";\n      for (let j = 1; j < 10; j++) {\n        grigliaTemp[i][j] = j;\n      }\n\n      //isColored\n      isColoredTemp[i] = [];\n      isColoredTemp[i][0] = true;\n      for (let j = 1; j < 11; j++) {\n        isColoredTemp[i][j] = false;\n      }\n      posizioniTemp[i] = 0;\n    }\n    this.setState({\n      griglia: grigliaTemp,\n      corridori: corridoriTemp,\n      isColored: isColoredTemp,\n      posizioni: posizioniTemp,\n      started: true\n    }, this.printStatus);\n    this.startInterval();\n  }\n  componentWillUnmount() {\n    // Clear the interval when the component unmounts\n    const {\n      intervalId\n    } = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n  avanza() {\n    if (this.state.started) {\n      let isColoredTemp = this.state.isColored;\n      let startedTemp = true;\n      let posizioniTemp = this.state.posizioni;\n      let classificaTemp = this.state.classifica;\n      for (let i = 0; i < this.state.corridori; i++) {\n        let lastIndex = -1;\n        for (let j = 1; j < 11; j++) {\n          if (isColoredTemp[i][j] === false) {\n            lastIndex = j - 1;\n            break;\n          }\n        }\n        let n = Math.floor(Math.random() * 3) + 1;\n        console.log(\"Corridore \" + (i + 1) + \" avanza di \" + n + \" posizioni\");\n        for (let j = lastIndex; j <= lastIndex + n; j++) {\n          isColoredTemp[i][j] = true;\n        }\n      }\n\n      //aggiorno posizioni\n      for (let i = 0; i < this.state.corridori; i++) {\n        let lastIndex = -1;\n        for (let j = 1; j < 11; j++) {\n          if (isColoredTemp[i][j] === false) {\n            lastIndex = j - 1;\n            console.log(\"Last index of isColored for corridor \" + i + \": \" + lastIndex);\n            break;\n          } else if (j === 10) {\n            lastIndex = 10;\n          }\n        }\n        posizioniTemp[i] = lastIndex;\n      }\n\n      //controllo se qualcuno Ã¨ arrivato al traguardo\n      for (let i = 0; i < posizioniTemp.length; i++) {\n        if (posizioniTemp[i] === 10) {\n          startedTemp = false;\n        }\n      }\n      if (startedTemp === false) {\n        //classifica associa a ogni corridore identificato\n        //dall'indice dell'array la sua posizione nella\n        //classifica\n        const athletes = posizioni.map((posizione, indice) => ({\n          numeroAtleta: indice + 1,\n          posizione: posizione\n        }));\n        athletes.sort((a, b) => b.distance - a.distance);\n        const classificaTemp = new Array(distances.length).fill(0);\n        athletes.forEach((athlete, rank) => {\n          ranking[athlete.athleteNumber] = rank + 1; // Rank starts from 1\n        });\n      }\n      this.setState({\n        isColored: isColoredTemp,\n        posizioni: posizioniTemp,\n        started: startedTemp\n      }, this.printStatus, startedTemp === false ? setTimeout(() => {\n        alert(\"Gioco finito\");\n      }, 100) : null);\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Section1, {\n        sectionName: this.sectionNames[0],\n        handleClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Section2, {\n        sectionName: this.sectionNames[1],\n        matrix: this.state.griglia,\n        colors: this.state.colors,\n        isColored: this.state.isColored\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Section3, {\n        sectionName: this.sectionNames[2],\n        posizioni: this.state.posizioni,\n        classifica: this.state.classifica\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Section1","Section2","Section3","jsxDEV","_jsxDEV","App","Component","constructor","props","startInterval","state","intervalId","setInterval","avanza","setState","sectionNames","corridori","colors","griglia","isColored","posizioni","classifica","started","handleClick","bind","printStatus","console","log","corridoriTemp","parseInt","document","getElementById","value","alert","grigliaTemp","isColoredTemp","posizioniTemp","i","j","componentWillUnmount","clearInterval","startedTemp","classificaTemp","lastIndex","n","Math","floor","random","length","athletes","map","posizione","indice","numeroAtleta","sort","a","b","distance","Array","distances","fill","forEach","athlete","rank","ranking","athleteNumber","setTimeout","render","className","children","sectionName","fileName","_jsxFileName","lineNumber","columnNumber","matrix"],"sources":["/home/joseph/Documents/Ingegneria Informatica/3_Anno/1_Semestre/Tecnologie_Web/Esami/Appello_24Giugno2024/Esercizio3/src/ReactComponent/App.js"],"sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\tthis.sectionNames = [\"Configurazione\", \"Pista\", \"Classifica\"];\n\n    this.state = {\n\t\tcorridori: 0,\n\t\tcolors: [ \"red\", \"green\", \"blue\", \"violet\", \"yellow\", \"orange\"],\n\t\tgriglia : [],\n\t\tisColored: [],\n\t\tposizioni: [],\n\t\tclassifica: [],\n\t\tintervalId: null,\n\t\tstarted: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  printStatus(){\n\tconsole.log(\"Status:\");\n\tconsole.log(\"Corridori: \" + this.state.corridori);\n\tconsole.log(\"Colors: \" + this.state.colors);\n\tconsole.log(\"Posizioni: \" + this.state.posizioni);\n\tconsole.log(\"Griglia: \" + this.state.griglia);\n\tconsole.log(\"isColored: \" + this.state.isColored);\n\tconsole.log(\"Started: \" + this.state.started);\n\n  }\n\n  handleClick(){\n\tlet corridoriTemp = parseInt(document.getElementById(\"corridori\").value, 10);\n\n\tif(corridoriTemp < 4 || corridoriTemp > 6){\n\t\talert(\"Inserisci un numero di corridori tra 4 e 6!\")\n\t\treturn\n\t}\n\n\tlet grigliaTemp = [];\n\tlet isColoredTemp = [];\n\tlet posizioniTemp = [];\n\n\tfor(let i=0;i<corridoriTemp;i++){\n\t\t//griglia\n\t\tgrigliaTemp[i] = [];\n\t\tgrigliaTemp[i][0] = \"Partenza\";\n\t\tgrigliaTemp[i][10] = \"Traguardo\";\n\t\tfor(let j=1;j<10;j++){\n\t\t\tgrigliaTemp[i][j] = j;\n\t\t}\n\n\t\t//isColored\n\t\tisColoredTemp[i] = [];\n\t\tisColoredTemp[i][0] = true;\n\t\tfor(let j=1;j<11;j++){\n\t\t\tisColoredTemp[i][j] = false;\n\t\t}\n\t\t\n\n\t\tposizioniTemp[i] = 0;\n\t}\n\n\tthis.setState(\n\t\t({\n\t\t\tgriglia: grigliaTemp,\n\t\t\tcorridori: corridoriTemp,\n\t\t\tisColored: isColoredTemp,\n\t\t\tposizioni: posizioniTemp,\n\t\t\tstarted: true,\n\t\t}),\n\t\tthis.printStatus\n\t);\t\n\tthis.startInterval();\n  }\n\n  startInterval = () => {\n    // Check if an interval is already running\n    if (this.state.intervalId) return;\n\n    // Set up the interval\n    const intervalId = setInterval(() => {\n      this.avanza();\n    }, 1000); // 4000 milliseconds = 4 seconds\n\n    // Update the state with the interval ID\n    this.setState({ intervalId });\n  };\n\n  componentWillUnmount() {\n    // Clear the interval when the component unmounts\n    const { intervalId } = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  avanza(){\n\tif(this.state.started){\n\t\tlet isColoredTemp = this.state.isColored;\n\t\tlet startedTemp = true;\n\t\tlet posizioniTemp = this.state.posizioni;\n\t\tlet classificaTemp = this.state.classifica;\n\n\t\tfor(let i=0;i<this.state.corridori;i++){\n\t\t\tlet lastIndex = -1;\n\t\t\tfor(let j=1;j<11;j++){\n\t\t\t\tif(isColoredTemp[i][j] === false){\n\t\t\t\t\tlastIndex = j-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tlet n = Math.floor(Math.random() * 3) + 1;\n\t\t\tconsole.log(\"Corridore \" + (i+1) + \" avanza di \" + n  + \" posizioni\");\n\n\t\t\tfor(let j=lastIndex;j<=lastIndex+n;j++){\n\t\t\t\tisColoredTemp[i][j] = true;\n\t\t\t}\n\t\t}\n\n\t\t//aggiorno posizioni\n\t\tfor(let i=0;i<this.state.corridori;i++){\n\t\t\tlet lastIndex = -1;\n\t\t\tfor(let j=1;j<11;j++){\n\t\t\t\tif(isColoredTemp[i][j] === false){\n\t\t\t\t\tlastIndex = j-1;\n\t\t\t\t\tconsole.log(\"Last index of isColored for corridor \" + i + \": \" + lastIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(j === 10){\n\t\t\t\t\tlastIndex = 10;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tposizioniTemp[i] = lastIndex;\n\t\t}\n\t\t\n\n\t\t//controllo se qualcuno Ã¨ arrivato al traguardo\n\t\tfor(let i=0; i<posizioniTemp.length;i++){\n\t\t\tif(posizioniTemp[i] === 10){\n\t\t\t\tstartedTemp = false;\n\t\t\t}\n\t\t}\n\n\t\tif(startedTemp === false){\n\t\t\t//classifica associa a ogni corridore identificato\n\t\t\t//dall'indice dell'array la sua posizione nella\n\t\t\t//classifica\n\t\t\tconst athletes = posizioni.map((posizione, indice) => ({\n\t\t\t\tnumeroAtleta: indice + 1,\n\t\t\t\tposizione: posizione,\n\t\t\t}));\n\n\t\t\tathletes.sort((a, b) => b.distance - a.distance);\n\n\t\t\tconst classificaTemp = new Array(distances.length).fill(0);\n\n\t\t\tathletes.forEach((athlete, rank) => {\n\t\t\t\tranking[athlete.athleteNumber] = rank + 1; // Rank starts from 1\n\t\t\t});\n\n\t\t\t\n\t\t}\n\n\n\t\tthis.setState(\n\t\t\t({\n\t\t\t\tisColored: isColoredTemp,\n\t\t\t\tposizioni: posizioniTemp,\n\t\t\t\tstarted: startedTemp,\n\t\t\t}),\n\t\t\tthis.printStatus,\n\t\t\tstartedTemp === false ? setTimeout(() => { alert(\"Gioco finito\"); }, 100 ) : null,\n\t\t)\n\t}\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n\t\t<Section1 \n\t\t\tsectionName = {this.sectionNames[0]}\n\t\t\thandleClick={this.handleClick} \n\t\t/>\n\t\t<Section2 \n\t\t\tsectionName = {this.sectionNames[1]}\n\t\t\tmatrix={this.state.griglia} \n\t\t\tcolors={this.state.colors}\n\t\t\tisColored={this.state.isColored}\n\t\t/>\n\t\t<Section3 \n\t\t\tsectionName = {this.sectionNames[2]}\n\t\t\tposizioni={this.state.posizioni}\n\t\t\tclassifica={this.state.classifica}\n\t\t/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}