{"ast":null,"code":"var _jsxFileName = \"/home/joseph/Documents/Ingegneria Informatica/3_Anno/1_Semestre/Tecnologie_Web/Esami/Appello_24Giugno2024/Esercizio3/src/ReactComponent/App.js\";\nimport React from 'react';\nimport '../App.css';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startInterval = () => {\n      // Check if an interval is already running\n      if (this.state.intervalId) return;\n\n      // Set up the interval\n      const intervalId = setInterval(() => {\n        this.avanza();\n      }, 4000); // 4000 milliseconds = 4 seconds\n\n      // Update the state with the interval ID\n      this.setState({\n        intervalId\n      });\n    };\n    this.sectionNames = [\"Configurazione\", \"Pista\", \"Classifica\"];\n    this.state = {\n      corridori: 0,\n      colors: [\"red\", \"green\", \"blue\", \"violet\", \"yellow\", \"orange\"],\n      griglia: [],\n      isColored: [],\n      posizioni: [],\n      classifica: [],\n      intervalId: null,\n      started: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  printStatus() {\n    console.log(\"Status:\");\n    console.log(\"Corridori: \" + this.state.corridori);\n    console.log(\"Colors: \" + this.state.colors);\n    console.log(\"Posizioni: \" + this.state.posizioni);\n    console.log(\"Griglia: \" + this.state.griglia);\n    console.log(\"isColored: \" + this.state.isColored);\n    console.log(\"Started: \" + this.state.started);\n  }\n  handleClick() {\n    let corridoriTemp = parseInt(document.getElementById(\"corridori\").value, 10);\n    if (corridoriTemp < 4 || corridoriTemp > 6) {\n      alert(\"Inserisci un numero di corridori tra 4 e 6!\");\n      return;\n    }\n    let grigliaTemp = [];\n    let isColoredTemp = [];\n    let posizioniTemp = [];\n    for (let i = 0; i < corridoriTemp; i++) {\n      //griglia\n      grigliaTemp[i] = [];\n      grigliaTemp[i][0] = \"Partenza\";\n      grigliaTemp[i][10] = \"Traguardo\";\n      for (let j = 1; j < 10; j++) {\n        grigliaTemp[i][j] = j;\n      }\n\n      //isColored\n      isColoredTemp[i] = [];\n      isColoredTemp[i][0] = true;\n      for (let j = 1; j < 11; j++) {\n        isColoredTemp[i][j] = false;\n      }\n      posizioniTemp[i] = 0;\n    }\n    this.setState({\n      griglia: grigliaTemp,\n      corridori: corridoriTemp,\n      isColored: isColoredTemp,\n      posizioni: posizioniTemp,\n      started: true\n    }, this.printStatus);\n    this.startInterval();\n  }\n  componentWillUnmount() {\n    // Clear the interval when the component unmounts\n    const {\n      intervalId\n    } = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n  avanza() {\n    if (this.state.started) {\n      let isColoredTemp = this.state.isColored;\n      let startedTemp = true;\n      let posizioniTemp = this.state.posizioni;\n      let classificaTemp = this.state.classifica;\n      for (let i = 0; i < this.state.corridori; i++) {\n        let lastIndex = -1;\n        for (let j = 1; j < 11; j++) {\n          if (isColoredTemp[i][j] === false) {\n            lastIndex = j - 1;\n            break;\n          }\n        }\n        let n = Math.floor(Math.random() * 3) + 1;\n        console.log(\"Corridore \" + (i + 1) + \" avanza di \" + n + \" posizioni\");\n        for (let j = lastIndex; j <= lastIndex + n; j++) {\n          isColoredTemp[i][j] = true;\n        }\n      }\n\n      //aggiorno posizioni\n      for (let i = 0; i < this.state.corridori; i++) {\n        let lastIndex = -1;\n        for (let j = 1; j < 11; j++) {\n          if (isColoredTemp[i][j] === false) {\n            lastIndex = j - 1;\n            console.log(\"Last index of isColored for corridor \" + i + \": \" + lastIndex);\n            break;\n          } else if (j === 10) {\n            lastIndex = 10;\n          }\n        }\n        posizioniTemp[i] = lastIndex;\n      }\n\n      //aggiorno la classifica\n\n      //controllo se qualcuno Ã¨ arrivato al traguardo\n      for (let i = 0; i < posizioniTemp.length; i++) {\n        if (posizioniTemp[i] === 10) {\n          startedTemp = false;\n        }\n      }\n      this.setState({\n        isColored: isColoredTemp,\n        posizioni: posizioniTemp,\n        started: startedTemp\n      }, this.printStatus, startedTemp === false ? setTimeout(() => {\n        alert(\"Gioco finito\");\n      }, 2000) : null);\n    }\n  }\n  modificaCella(i, j) {\n    if (this.state.disabled[i][j] === false) {\n      this.setState({\n        tentativi: this.state.tentativi + 1\n      });\n      let punteggioTemp = this.state.punteggio;\n      let temp = this.state.disabled;\n      temp[i][j] = true;\n      punteggioTemp += this.state.griglia[i][j];\n      if (i - 1 >= 0 && temp[i - 1][j] === false) {\n        temp[i - 1][j] = true;\n        punteggioTemp += this.state.griglia[i - 1][j];\n      }\n      if (i + 1 < this.state.lunghezza && temp[i + 1][j] === false) {\n        temp[i + 1][j] = true;\n        punteggioTemp += this.state.griglia[i + 1][j];\n      }\n      if (j - 1 >= 0 && temp[i][j - 1] === false) {\n        temp[i][j - 1] = true;\n        punteggioTemp += this.state.griglia[i][j - 1];\n      }\n      if (j + 1 >= 0 && temp[i][j + 1] === false) {\n        temp[i][j + 1] = true;\n        punteggioTemp += this.state.griglia[i][j + 1];\n      }\n      this.setState({\n        punteggio: punteggioTemp,\n        disabled: temp\n      });\n    }\n  }\n  isFinito() {\n    let finish = true;\n    for (let i = 0; i < this.state.lunghezza && finish === true; i++) {\n      for (let j = 0; j < this.state.larghezza; j++) {\n        if (this.state.disabled[i][j] === false) {\n          finish = false;\n          break;\n        }\n      }\n    }\n    if (finish === true) {\n      if (this.state.show === false) {\n        this.setState({\n          mediaPunt: this.state.punteggio / this.state.tentativi,\n          show: true\n        });\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Section1, {\n        sectionName: this.sectionNames[0],\n        handleClick: this.handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Section2, {\n        sectionName: this.sectionNames[1],\n        matrix: this.state.griglia,\n        colors: this.state.colors,\n        isColored: this.state.isColored\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Section3, {\n        sectionName: this.sectionNames[2],\n        posizioni: this.state.posizioni\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Section1","Section2","Section3","jsxDEV","_jsxDEV","App","Component","constructor","props","startInterval","state","intervalId","setInterval","avanza","setState","sectionNames","corridori","colors","griglia","isColored","posizioni","classifica","started","handleClick","bind","printStatus","console","log","corridoriTemp","parseInt","document","getElementById","value","alert","grigliaTemp","isColoredTemp","posizioniTemp","i","j","componentWillUnmount","clearInterval","startedTemp","classificaTemp","lastIndex","n","Math","floor","random","length","setTimeout","modificaCella","disabled","tentativi","punteggioTemp","punteggio","temp","lunghezza","isFinito","finish","larghezza","show","mediaPunt","render","className","children","sectionName","fileName","_jsxFileName","lineNumber","columnNumber","matrix"],"sources":["/home/joseph/Documents/Ingegneria Informatica/3_Anno/1_Semestre/Tecnologie_Web/Esami/Appello_24Giugno2024/Esercizio3/src/ReactComponent/App.js"],"sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\tthis.sectionNames = [\"Configurazione\", \"Pista\", \"Classifica\"];\n\n    this.state = {\n\t\tcorridori: 0,\n\t\tcolors: [ \"red\", \"green\", \"blue\", \"violet\", \"yellow\", \"orange\"],\n\t\tgriglia : [],\n\t\tisColored: [],\n\t\tposizioni: [],\n\t\tclassifica: [],\n\t\tintervalId: null,\n\t\tstarted: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  printStatus(){\n\tconsole.log(\"Status:\");\n\tconsole.log(\"Corridori: \" + this.state.corridori);\n\tconsole.log(\"Colors: \" + this.state.colors);\n\tconsole.log(\"Posizioni: \" + this.state.posizioni);\n\tconsole.log(\"Griglia: \" + this.state.griglia);\n\tconsole.log(\"isColored: \" + this.state.isColored);\n\tconsole.log(\"Started: \" + this.state.started);\n\n  }\n\n  handleClick(){\n\tlet corridoriTemp = parseInt(document.getElementById(\"corridori\").value, 10);\n\n\tif(corridoriTemp < 4 || corridoriTemp > 6){\n\t\talert(\"Inserisci un numero di corridori tra 4 e 6!\")\n\t\treturn\n\t}\n\n\tlet grigliaTemp = [];\n\tlet isColoredTemp = [];\n\tlet posizioniTemp = [];\n\n\tfor(let i=0;i<corridoriTemp;i++){\n\t\t//griglia\n\t\tgrigliaTemp[i] = [];\n\t\tgrigliaTemp[i][0] = \"Partenza\";\n\t\tgrigliaTemp[i][10] = \"Traguardo\";\n\t\tfor(let j=1;j<10;j++){\n\t\t\tgrigliaTemp[i][j] = j;\n\t\t}\n\n\t\t//isColored\n\t\tisColoredTemp[i] = [];\n\t\tisColoredTemp[i][0] = true;\n\t\tfor(let j=1;j<11;j++){\n\t\t\tisColoredTemp[i][j] = false;\n\t\t}\n\t\t\n\n\t\tposizioniTemp[i] = 0;\n\t}\n\n\tthis.setState(\n\t\t({\n\t\t\tgriglia: grigliaTemp,\n\t\t\tcorridori: corridoriTemp,\n\t\t\tisColored: isColoredTemp,\n\t\t\tposizioni: posizioniTemp,\n\t\t\tstarted: true,\n\t\t}),\n\t\tthis.printStatus\n\t);\t\n\tthis.startInterval();\n  }\n\n  startInterval = () => {\n    // Check if an interval is already running\n    if (this.state.intervalId) return;\n\n    // Set up the interval\n    const intervalId = setInterval(() => {\n      this.avanza();\n    }, 4000); // 4000 milliseconds = 4 seconds\n\n    // Update the state with the interval ID\n    this.setState({ intervalId });\n  };\n\n  componentWillUnmount() {\n    // Clear the interval when the component unmounts\n    const { intervalId } = this.state.intervalId;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  avanza(){\n\tif(this.state.started){\n\t\tlet isColoredTemp = this.state.isColored;\n\t\tlet startedTemp = true;\n\t\tlet posizioniTemp = this.state.posizioni;\n\t\tlet classificaTemp = this.state.classifica;\n\n\t\tfor(let i=0;i<this.state.corridori;i++){\n\t\t\tlet lastIndex = -1;\n\t\t\tfor(let j=1;j<11;j++){\n\t\t\t\tif(isColoredTemp[i][j] === false){\n\t\t\t\t\tlastIndex = j-1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tlet n = Math.floor(Math.random() * 3) + 1;\n\t\t\tconsole.log(\"Corridore \" + (i+1) + \" avanza di \" + n  + \" posizioni\");\n\n\t\t\tfor(let j=lastIndex;j<=lastIndex+n;j++){\n\t\t\t\tisColoredTemp[i][j] = true;\n\t\t\t}\n\t\t}\n\n\t\t//aggiorno posizioni\n\t\tfor(let i=0;i<this.state.corridori;i++){\n\t\t\tlet lastIndex = -1;\n\t\t\tfor(let j=1;j<11;j++){\n\t\t\t\tif(isColoredTemp[i][j] === false){\n\t\t\t\t\tlastIndex = j-1;\n\t\t\t\t\tconsole.log(\"Last index of isColored for corridor \" + i + \": \" + lastIndex);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if(j === 10){\n\t\t\t\t\tlastIndex = 10;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t}\n\n\t\t\tposizioniTemp[i] = lastIndex;\n\t\t}\n\n\t\t//aggiorno la classifica\n\t\t\n\n\t\t//controllo se qualcuno Ã¨ arrivato al traguardo\n\t\tfor(let i=0; i<posizioniTemp.length;i++){\n\t\t\tif(posizioniTemp[i] === 10){\n\t\t\t\tstartedTemp = false;\n\t\t\t}\n\t\t}\n\n\n\t\tthis.setState(\n\t\t\t({\n\t\t\t\tisColored: isColoredTemp,\n\t\t\t\tposizioni: posizioniTemp,\n\t\t\t\tstarted: startedTemp,\n\t\t\t}),\n\t\t\tthis.printStatus,\n\t\t\tstartedTemp === false ? setTimeout(() => { alert(\"Gioco finito\"); }, 2000 ) : null,\n\t\t)\n\t}\n  }\n\n\n\n  modificaCella(i,j){\n\t    if(this.state.disabled[i][j] === false){\n\t    \tthis.setState({\n\t    \t\ttentativi : this.state.tentativi +1,\n\t    \t});\n\t    \tlet punteggioTemp = this.state.punteggio;\n\t    \tlet temp = this.state.disabled;\n\t    \ttemp[i][j] = true;\n\t    \tpunteggioTemp += this.state.griglia[i][j];\n\t    \tif(i-1 >=0 && temp[i-1][j] === false){\n\t    \t\ttemp[i-1][j] = true;\n\t    \t\tpunteggioTemp += this.state.griglia[i-1][j];\n\t    \t}\n\t    \tif(i+1 <this.state.lunghezza && temp[i+1][j] === false){\n\t    \t\ttemp[i+1][j] = true;\n\t    \t\tpunteggioTemp += this.state.griglia[i+1][j];\n\t    \t} \n\t    \tif(j-1 >=0 && temp[i][j-1] === false){\n\t    \t\ttemp[i][j-1] = true;\n\t    \t\tpunteggioTemp += this.state.griglia[i][j-1];\n\t    \t}\n\t    \tif(j+1 >=0 && temp[i][j+1] === false){\n\t    \t\ttemp[i][j+1] = true;\n\t    \t\tpunteggioTemp += this.state.griglia[i][j+1];\n\t    \t}\n\t    \tthis.setState({\n\t    \t\tpunteggio : punteggioTemp,\n\t    \t\tdisabled : temp,\n\t    \t});\n\t    }\n  }\n\n  isFinito(){\n    let finish = true;\n    for(let i = 0 ; i<this.state.lunghezza && finish === true;i++){\n    \tfor(let j = 0 ;j<this.state.larghezza;j++){\n    \t\tif(this.state.disabled[i][j] === false){\n    \t\t\tfinish = false;\n    \t\t\tbreak;\n    \t\t}\n    \t}\n    }\n    if(finish === true){\n    \tif(this.state.show === false){\n\t    \tthis.setState({\n\t    \t\tmediaPunt : this.state.punteggio / this.state.tentativi,\n\t    \t\tshow : true,\n\t    \t});\n    \t}\n    \treturn true;\n    }\n    else{\n    \treturn false;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n\t\t<Section1 \n\t\t\tsectionName = {this.sectionNames[0]}\n\t\t\thandleClick={this.handleClick} \n\t\t/>\n\t\t<Section2 \n\t\t\tsectionName = {this.sectionNames[1]}\n\t\t\tmatrix={this.state.griglia} \n\t\t\tcolors={this.state.colors}\n\t\t\tisColored={this.state.isColored}\n\t\t/>\n\t\t<Section3 \n\t\t\tsectionName = {this.sectionNames[2]}\n\t\t\tposizioni={this.state.posizioni}\n\t\t/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}